inside requirements.txt
git:// did not work from behind corporate proxy. changed to http
git+http://github.com/open-policy-agent/rego-python

sqllite needs to operate on the same thread.
main is one thred and app.run is one thread.
if db is created and populated in main, it won't be accessibl in app.run
hence connection needs to be stored in flask. g once created

sqllite query args (item,), end comma is required

#upload data
curl -X PUT --data-binary @product_policy_data.json localhost:8181/v1/data/product_policy_data

#Upload policy
curl -X PUT --data-binary @product_policy.rego localhost:8181/v1/policies/authz/product_policy

product_policy.allow_cat_assistant_resource with input as  { "category_name" : "Bakery", "path": ["api","products","Anne"], "user_name":"Jim", "method": "POST"}

opa run -w  product_policy.rego product_policy_data.json
package execution
import input.input
import data.product_policy_data
import data.authz.product_policy

product_policy.allow with input as {
        "category_name": "Bakery",
        "path" :["api","products","Jim"],
        "user_name": "Jim",
        "method": "POST"
        }  

product_policy.allow with input as { "category_name": "Bakery", "path": ["api","products","Jim"],"method": "POST", "user_name": "Jim"}  
data.authz.allow with input as {"input": {"method": "GET","path": ["pets", "fluffy"],"subject":{"user":"alice", "location": "SOMA"}}}

https://pythonspeed.com/articles/activate-virtualenv-dockerfile/
https://blog.realkinetic.com/building-minimal-docker-containers-for-python-applications-37d0272c52f3

an example post to document and write posts
https://blog.codeship.com/using-docker-compose-for-python-development/

#Most important things specify host as "0.0.0.0" inside python app.run
#alias docker_clean_images='docker rmi $(docker images -a --filter=dangling=true -q)'
#alias docker_clean_ps='docker rm $(docker ps --filter=status=exited --filter=status=created -q)'

https://www.patricksoftwareblog.com/testing-a-flask-application-using-pytest/
https://medium.com/mobileforgood/patterns-for-continuous-integration-with-docker-on-travis-ci-71857fff14c5